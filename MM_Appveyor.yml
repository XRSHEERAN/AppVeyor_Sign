version: 0.0.0.{build}

branches:

  only:

  - master

  - release

image: Visual Studio 2017

init:

- ps: >-

    if ($TRUE)

    {

            Update-AppveyorBuild -Version "$env:APPVEYOR_REPO_TAG_NAME"

            echo $env:APPVEYOR_REPO_TAG_NAME

    }

    #else

    #{

    #        Update-AppveyorBuild -Version "$env:APPVEYOR_BUILD_NUMBER"

    #        echo $env:APPVEYOR_BUILD_NUMBER

    #}

assembly_info:

  patch: true

  file: '**\AssemblyInfo.*'

  assembly_version: '{version}'

  assembly_file_version: '{version}'

  assembly_informational_version: '{version}'

dotnet_csproj:

  patch: true

  file: '**\*.csproj'

  version: '{version}'

  package_version: '{version}'

  assembly_version: '{version}'

  file_version: '{version}'

  informational_version: '{version}'

install:
- cmd: >-
    nuget install secure-file -ExcludeVersion
    
    secure-file\tools\secure-file -decrypt smith_MM_certificate.pfx.enc -secret %key_secret%

build_script:

- ps: "cat EngineLayer\\EngineLayer.csproj\ncat GUI\\Properties\\AssemblyInfo.cs\nnuget restore MetaMorpheus.sln\ndotnet restore MetaMorpheus.sln\n\n$buildArgs = @(\n \"MetaMorpheus.sln\"\n    \"/p:Configuration=TestAndRelease\"\n        \"/verbosity:minimal\"\n        \"/p:UseSharedCompilation=false\"\n        \"/logger:C:\\Program Files\\AppVeyor\\BuildAgent\\Appveyor.MSBuildLogger.dll\"\n);\n\n\nif($TRUE)\n{\n\n& cov-build --dir cov-int msbuild $buildArgs\n\n}\nelse\n{\n& msbuild $buildArgs\n& dotnet publish /p:Configuration=TestAndReleaseLinux MetaMorpheus.sln  -f netcoreapp2.0 \n}\n\n\nif($TRUE)\n{\n$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2\n$cert.Import($env:sign_cert,$env:key_cert,'DefaultKeySet')\nSet-AuthenticodeSignature -FilePath $env:sign_tar -Certificate $cert\nSet-AuthenticodeSignature -FilePath $env:sign_tar_CMD -Certificate $cert\n7z a MetaMorpheusDotNetFrameworkAppveyor.zip $env:APPVEYOR_BUILD_FOLDER\\CMD\\bin\\Release\\net461\\*  \"-x!*.xml\"\n7z a MetaMorpheusDotNetCoreAppveyor.zip $env:APPVEYOR_BUILD_FOLDER\\CMD\\bin\\Release\\netcoreapp2.0\\publish\\*  \"-x!*.xml\"\n7z a MetaMorpheusGuiDotNetFrameworkAppveyor.zip $env:APPVEYOR_BUILD_FOLDER\\GUI\\bin\\Release\\* \"-x!*.xml\"\nCopy-Item $env:APPVEYOR_BUILD_FOLDER\\MetaMorpheusSetup\\bin\\Release\\MetaMorpheusInstaller.msi MetaMorpheusInstaller.msi\nPush-AppveyorArtifact MetaMorpheusDotNetFrameworkAppveyor.zip \nPush-AppveyorArtifact MetaMorpheusDotNetCoreAppveyor.zip \nPush-AppveyorArtifact MetaMorpheusGuiDotNetFrameworkAppveyor.zip\nPush-AppveyorArtifact MetaMorpheusInstaller.msi\n}"
test_script:

- ps: "& $env:APPVEYOR_BUILD_FOLDER\\CMD\\bin\\Release\\net461\\CMD.exe -t Examples\\Task1SearchExample.toml Examples\\Task2CalibrationExample.toml Examples\\Task3SearchExample.toml Examples\\Task4GptmdExample.toml Examples\\Task5SearchExample.toml -s Examples\\example.mzML -d Examples\\mouse-10.xml\n\nif($LastExitCode -ne 0) {  $host.SetShouldExit($LastExitCode)}\n\n& dotnet $env:APPVEYOR_BUILD_FOLDER\\CMD\\bin\\Release\\netcoreapp2.0\\CMD.dll -t Examples\\Task1SearchExample.toml Examples\\Task2CalibrationExample.toml Examples\\Task3SearchExample.toml Examples\\Task4GptmdExample.toml Examples\\Task5SearchExample.toml -s Examples\\example.mzML -d Examples\\mouse-10.xml\n\nif($LastExitCode -ne 0) {  $host.SetShouldExit($LastExitCode)}\n\nnuget install OpenCover\n\n$opencover= (Resolve-Path \"OpenCover.*/tools/OpenCover.Console.exe\").ToString()\n\n& $opencover -register:user -returntargetcode -target:\"C:\\Program Files\\dotnet\\dotnet.exe\" -targetargs:\"test Test\\Test.csproj\" -output:opencoverCoverage.xml -filter:\"+[*]* -[Test*]*\" -excludebyfile:\"*\\Nett\\*\" -oldStyle\n\nif ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode)  }   \n \nchoco install codecov\n\ncodecov -f opencoverCoverage.xml -t b9c71288-9f05-4fb4-aeb8-dafd7ad3ab00\n\nif(($env:APPVEYOR_REPO_BRANCH -eq \"master\") -and (!$env:APPVEYOR_PULL_REQUEST_NUMBER))\n{\nnuget install PublishCoverity\n\n$publishCoverityExe = (Resolve-Path \"PublishCoverity.*/tools/PublishCoverity.exe\").ToString()\n\n& $publishCoverityExe compress -o myproject.zip -i cov-int;\n\n& $publishCoverityExe publish -z myproject.zip  -r MetaMorpheus -t PJdaVO--UD8oA07oNV5GEg -e solntsev@gmail.com -d \"AppVeyor scheduled build.\" --codeVersion $env:APPVEYOR_BUILD_VERSION;\n\n}"

artifacts:

- path: MetaMorpheusDotNetFrameworkAppveyor.zip

  name: MetaMorpheusDotNetFrameworkAppveyor

- path: MetaMorpheusDotNetCoreAppveyor.zip

  name: MetaMorpheusDotNetCoreAppveyor

- path: MetaMorpheusGuiDotNetFrameworkAppveyor.zip

  name: MetaMorpheusGuiDotNetFrameworkAppveyor

- path: MetaMorpheusInstaller.msi

  name: MetaMorpheusInstaller

deploy:

- provider: GitHub

  auth_token:

    secure: /Z8ErNTFKIReqQi5angDCbRdPgbdYmYYityLy6FcGEjCOz89EmDSXvcK0JU2sT/4

  artifact: MetaMorpheusGuiDotNetFrameworkAppveyor, MetaMorpheusDotNetCoreAppveyor, MetaMorpheusDotNetFrameworkAppveyor, MetaMorpheusInstaller

  prerelease: false

  force_update: true

  on:

    APPVEYOR_REPO_TAG: TRUE
